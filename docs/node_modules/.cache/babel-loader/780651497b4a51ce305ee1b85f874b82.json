{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Project3\\\\web-ratings\\\\docs\\\\src\\\\pages\\\\Websites.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Websites extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      websites: [],\n      URL: \"\",\n      thumbnail: \"\",\n      summary: \"\"\n    };\n\n    this.loadWebsites = () => {\n      API.getWebsites().then(res => this.setState({\n        websites: res.data,\n        URL: \"\",\n        thumbnail: \"\",\n        summary: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteWebsite = id => {\n      API.deleteWebsite(id).then(res => this.loadWebsites()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.URL && this.state.thumbnail) {\n        API.saveWebsite({\n          URL: this.state.URL,\n          thumbnail: this.state.thumbnail,\n          summary: this.state.summary\n        }).then(res => this.loadWebsites()).catch(err => console.log(err));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadWebsites();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"What Websites Would You like to Rate?\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.URL,\n      onChange: this.handleInputChange,\n      name: \"URL\",\n      placeholder: \"URL (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.thumbnail,\n      onChange: this.handleInputChange,\n      name: \"thumbnail\",\n      placeholder: \"Thumbnail (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      value: this.state.summary,\n      onChange: this.handleInputChange,\n      name: \"summary\",\n      placeholder: \"Summary (Optional)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(FormBtn, {\n      disabled: !(this.state.thumbnail && this.state.URL),\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Submit Website\"))), React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Websites On My List\")), this.state.websites.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.websites.map(website => React.createElement(ListItem, {\n      key: website._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/websites/\" + website._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, website.URL, \" by \", website.thumbnail)), React.createElement(DeleteBtn, {\n      onClick: () => this.deleteWebsite(website._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"No Results to Display\"))));\n  }\n\n}\n\nexport default Websites;","map":{"version":3,"sources":["C:/Users/chris/Desktop/Project3/web-ratings/docs/src/pages/Websites.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Websites","state","websites","URL","thumbnail","summary","loadWebsites","getWebsites","then","res","setState","data","catch","err","console","log","deleteWebsite","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveWebsite","componentDidMount","render","length","map","website","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn} from \"../components/Form\";\r\n\r\n\r\nclass Websites extends Component {\r\n  state = {\r\n    websites: [],\r\n    URL: \"\",\r\n    thumbnail: \"\",\r\n    summary: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadWebsites();\r\n  }\r\n\r\n  loadWebsites = () => {\r\n    API.getWebsites()\r\n      .then(res =>\r\n        this.setState({ websites: res.data, URL: \"\", thumbnail: \"\", summary: \"\" })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteWebsite = id => {\r\n    API.deleteWebsite(id)\r\n      .then(res => this.loadWebsites())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.URL && this.state.thumbnail) {\r\n      API.saveWebsite({\r\n        URL: this.state.URL,\r\n        thumbnail: this.state.thumbnail,\r\n        summary: this.state.summary\r\n      })\r\n        .then(res => this.loadWebsites())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n          <Jumbotron>\r\n              <h1>What Websites Would You like to Rate?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.URL}\r\n                onChange={this.handleInputChange}\r\n                name=\"URL\"\r\n                placeholder=\"URL (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.thumbnail}\r\n                onChange={this.handleInputChange}\r\n                name=\"thumbnail\"\r\n                placeholder=\"Thumbnail (required)\"\r\n              />\r\n              <TextArea\r\n                value={this.state.summary}\r\n                onChange={this.handleInputChange}\r\n                name=\"summary\"\r\n                placeholder=\"Summary (Optional)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(this.state.thumbnail && this.state.URL)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit Website\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n          <Jumbotron>\r\n              <h1>Websites On My List</h1>\r\n            </Jumbotron>\r\n\t\t\t  {this.state.websites.length ? (\r\n              <List>\r\n                {this.state.websites.map(website => (\r\n                  <ListItem key={website._id}>\r\n                    <Link to={\"/websites/\" + website._id}>\r\n                      <strong>\r\n                        {website.URL} by {website.thumbnail}\r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => this.deleteWebsite(website._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\t);\r\n}\r\n}\r\n\t\r\n\r\nexport default Websites;\r\n"]},"metadata":{},"sourceType":"module"}