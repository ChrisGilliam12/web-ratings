{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Project3\\\\web-ratings\\\\docs\\\\src\\\\pages\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport Module from \"../components/module/Index\";\nimport Filter from \"../components/Filter/Index\";\nimport Container from \"../components/Container/Index\";\nimport { List, ListItem } from \"../components/List\";\nimport Checkbox from \"../components/Checkbox\";\nconst items = ['Popular', 'Highest Rating', 'Newest'];\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      websites: [],\n      category: \"\",\n      description: \"\",\n      link: \"\",\n      image: \"\"\n    };\n\n    this.componentWillMount = () => {\n      this.selectedBoxes = new Set();\n    };\n\n    this.toggleBox = label => {\n      if (this.selectedBoxes.has(label)) {\n        this.selectedBoxes.delete(label);\n      } else {\n        this.selectedBoxes.add(label);\n      }\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n\n      for (const box of this.selectedBoxes) {\n        console.log(box, 'is chosen');\n      }\n    };\n\n    this.createCheckbox = label => React.createElement(Checkbox, {\n      label: label,\n      handleCheck: this.toggleBox,\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n\n    this.renderCheckboxes = () => items.map(this.createCheckbox);\n  }\n\n  // componentDidMount() {\n  //     this.loadSites();\n  // };\n  // loadSites = () => {\n  //     API.getSites()\n  //         .then(res =>\n  //             this.setState({\n  //                 websites: res.data,\n  //                 category: \"\",\n  //                 description: \"\",\n  //                 link: \"\",\n  //                 image: \"\" \n  //             })\n  //             )\n  //             .catch(err => console.log(err));\n  // };\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.renderCheckboxes(), React.createElement(\"button\", {\n      className: \"pure-button pure-button-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Apply\"))), React.createElement(Module, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"List of Websites\"), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.websites.map(website => React.createElement(ListItem, {\n      key: website._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, website.title)))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/chris/Desktop/Project3/web-ratings/docs/src/pages/Home.js"],"names":["React","Component","Module","Filter","Container","List","ListItem","Checkbox","items","Home","state","websites","category","description","link","image","componentWillMount","selectedBoxes","Set","toggleBox","label","has","delete","add","handleFormSubmit","formSubmitEvent","preventDefault","box","console","log","createCheckbox","renderCheckboxes","map","render","website","_id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,MAAMC,KAAK,GAAG,CACV,SADU,EAEV,gBAFU,EAGV,QAHU,CAAd;;AAMA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBS,KADyB,GACjB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,IAAI,EAAE,EAJF;AAKJC,MAAAA,KAAK,EAAE;AALH,KADiB;;AAAA,SASzBC,kBATyB,GASJ,MAAM;AACvB,WAAKC,aAAL,GAAqB,IAAIC,GAAJ,EAArB;AACH,KAXwB;;AAAA,SAazBC,SAbyB,GAabC,KAAK,IAAI;AACjB,UAAI,KAAKH,aAAL,CAAmBI,GAAnB,CAAuBD,KAAvB,CAAJ,EAAmC;AAC/B,aAAKH,aAAL,CAAmBK,MAAnB,CAA0BF,KAA1B;AACH,OAFD,MAEO;AACH,aAAKH,aAAL,CAAmBM,GAAnB,CAAuBH,KAAvB;AACH;AACJ,KAnBwB;;AAAA,SAqBzBI,gBArByB,GAqBNC,eAAe,IAAI;AAClCA,MAAAA,eAAe,CAACC,cAAhB;;AACA,WAAK,MAAMC,GAAX,IAAkB,KAAKV,aAAvB,EAAsC;AAClCW,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,WAAjB;AACH;AACJ,KA1BwB;;AAAA,SA4BzBG,cA5ByB,GA4BRV,KAAK,IAClB,oBAAC,QAAD;AACI,MAAA,KAAK,EAAEA,KADX;AAEI,MAAA,WAAW,EAAE,KAAKD,SAFtB;AAGI,MAAA,GAAG,EAAEC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BqB;;AAAA,SAoCzBW,gBApCyB,GAoCN,MACfvB,KAAK,CAACwB,GAAN,CAAU,KAAKF,cAAf,CArCqB;AAAA;;AAwCzB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKT,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKO,gBAAL,EADL,EAEI;AAAQ,MAAA,SAAS,EAAC,iCAAlB;AAAoD,MAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,CADJ,EAOI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWC,QAAX,CAAoBqB,GAApB,CAAwBE,OAAO,IAC5B,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,OAAO,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,OAAO,CAACE,KADb,CADH,CADL,CAFJ,CAPJ,CADJ;AAoBH;;AA/EwB;;AAkF7B,eAAe3B,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Module from \"../components/module/Index\"\r\nimport Filter from \"../components/Filter/Index\"\r\nimport Container from \"../components/Container/Index\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport Checkbox from \"../components/Checkbox\"\r\n\r\n\r\nconst items = [\r\n    'Popular',\r\n    'Highest Rating',\r\n    'Newest'\r\n];\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        websites: [],\r\n        category: \"\",\r\n        description: \"\",\r\n        link: \"\",\r\n        image: \"\"\r\n    };\r\n\r\n    componentWillMount = () => {\r\n        this.selectedBoxes = new Set();\r\n    }\r\n\r\n    toggleBox = label => {\r\n        if (this.selectedBoxes.has(label)) {\r\n            this.selectedBoxes.delete(label);\r\n        } else {\r\n            this.selectedBoxes.add(label);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = formSubmitEvent => {\r\n        formSubmitEvent.preventDefault();\r\n        for (const box of this.selectedBoxes) {\r\n            console.log(box, 'is chosen');\r\n        }\r\n    }\r\n\r\n    createCheckbox = label => (\r\n        <Checkbox\r\n            label={label}\r\n            handleCheck={this.toggleBox}\r\n            key={label}\r\n            />\r\n    )\r\n\r\n    renderCheckboxes = () => (\r\n        items.map(this.createCheckbox)\r\n    )\r\n\r\n    // componentDidMount() {\r\n    //     this.loadSites();\r\n    // };\r\n\r\n    // loadSites = () => {\r\n    //     API.getSites()\r\n    //         .then(res =>\r\n    //             this.setState({\r\n    //                 websites: res.data,\r\n    //                 category: \"\",\r\n    //                 description: \"\",\r\n    //                 link: \"\",\r\n    //                 image: \"\" \r\n    //             })\r\n    //             )\r\n    //             .catch(err => console.log(err));\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Filter>\r\n                    <form onSubmit={this.handleFormSubmit}>\r\n                        {this.renderCheckboxes()}\r\n                        <button className=\"pure-button pure-button-primary\" type=\"submit\">Apply</button>\r\n                    </form>\r\n                </Filter>\r\n                <Module>\r\n                    <h3>List of Websites</h3>\r\n                    <List>\r\n                        {this.state.websites.map(website => (\r\n                            <ListItem key={website._id}>\r\n                                {website.title}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Module>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}