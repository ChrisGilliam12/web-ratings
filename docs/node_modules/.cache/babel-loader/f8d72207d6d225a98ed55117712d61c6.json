{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Project3\\\\web-ratings\\\\docs\\\\src\\\\pages\\\\Login.js\";\n\n/* global gapi */\nimport React, { Component } from \"react\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport Container from \"../components/Container/Index\";\nimport './pages.css';\n\nclass Login extends Component {\n  //    render() {\n  //        return (\n  //            <Container>\n  //                <form id=\"loginForm\">\n  //                    <h4>User Name</h4>\n  //                    <Input/>\n  //                    <h4>Password</h4>\n  //                    <Input/>\n  //                    <FormBtn>Submit</FormBtn>\n  //                </form>\n  //                <div id=\"register\">Don't have an account? <a id=\"account\" href=\"/newUser\">Click Here</a> to create one.</div>\n  //            </Container>\n  //        );\n  //    }\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false\n    };\n  }\n\n  componentDidMount() {\n    const successCallback = this.onSuccess.bind(this);\n    window.gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com'\n      }); // this.auth2.attachClickHandler(document.querySelector('#loginButton'), {}, this.onLoginSuccessful.bind(this))\n\n      this.auth2.then(() => {\n        console.log('on init');\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn.get()\n        });\n      });\n    });\n    window.gapi.load('signin2', function () {\n      // Method 3: render a sign in button\n      // using this method will show Signed In if the user is already signed in\n      var opts = {\n        width: 200,\n        height: 50,\n        client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com',\n        onsuccess: successCallback\n      };\n      gapi.signin2.render('loginButton', opts);\n    });\n  }\n\n  onSuccess() {\n    console.log('on success');\n    this.setState({\n      isSignedIn: true,\n      err: null\n    });\n  }\n\n  onLoginFailed(err) {\n    this.setState({\n      isSignedIn: false,\n      error: err\n    });\n  }\n\n  getContent() {\n    if (this.state.isSignedIn) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"hello user, you're signed in \");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"You are not signed in. Click here to sign in.\"), React.createElement(\"button\", {\n        id: \"loginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Login with Google\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Sample App.\"), this.getContent()));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/chris/Desktop/Project3/web-ratings/docs/src/pages/Login.js"],"names":["React","Component","Input","FormBtn","Container","Login","constructor","props","state","isSignedIn","componentDidMount","successCallback","onSuccess","bind","window","gapi","load","auth2","init","client_id","then","console","log","setState","get","opts","width","height","onsuccess","signin2","render","err","onLoginFailed","error","getContent","logo"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,oBAA/B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,eAAe,GAAG,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAxB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,OAAjB,EAA0B,MAAM;AAC9B,WAAKC,KAAL,GAAaF,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgB;AAC3BC,QAAAA,SAAS,EAAE;AADgB,OAAhB,CAAb,CAD8B,CAK9B;;AAEA,WAAKF,KAAL,CAAWG,IAAX,CAAgB,MAAM;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKC,QAAL,CAAc;AACZd,UAAAA,UAAU,EAAE,KAAKQ,KAAL,CAAWR,UAAX,CAAsBe,GAAtB;AADA,SAAd;AAGD,OALD;AAMD,KAbD;AAeAV,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,SAAjB,EAA4B,YAAW;AACrC;AACA;AACA,UAAIS,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,GADE;AAETC,QAAAA,MAAM,EAAE,EAFC;AAGTR,QAAAA,SAAS,EAAE,2CAHF;AAITS,QAAAA,SAAS,EAAEjB;AAJF,OAAX;AAMAI,MAAAA,IAAI,CAACc,OAAL,CAAaC,MAAb,CAAoB,aAApB,EAAmCL,IAAnC;AACD,KAVD;AAWD;;AAEDb,EAAAA,SAAS,GAAG;AACVS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAKC,QAAL,CAAc;AACZd,MAAAA,UAAU,EAAE,IADA;AAEZsB,MAAAA,GAAG,EAAE;AAFO,KAAd;AAID;;AAEDC,EAAAA,aAAa,CAACD,GAAD,EAAM;AACjB,SAAKR,QAAL,CAAc;AACZd,MAAAA,UAAU,EAAE,KADA;AAEZwB,MAAAA,KAAK,EAAEF;AAFK,KAAd;AAID;;AAEDG,EAAAA,UAAU,GAAG;AACX,QAAI,KAAK1B,KAAL,CAAWC,UAAf,EAA2B;AACzB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACD,KAFD,MAEO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,EAEE;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAMD;AAEF;;AAEDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEK,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAIG,KAAKD,UAAL,EAJH,CADF,CADF;AAUD;;AAjGuB;;AAqG9B,eAAe7B,KAAf","sourcesContent":["/* global gapi */\r\nimport React, { Component } from \"react\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\nimport Container from \"../components/Container/Index\";\r\nimport './pages.css';\r\n\r\nclass Login extends Component {\r\n\r\n//    render() {\r\n//        return (\r\n//            <Container>\r\n//                <form id=\"loginForm\">\r\n//                    <h4>User Name</h4>\r\n//                    <Input/>\r\n//                    <h4>Password</h4>\r\n//                    <Input/>\r\n//                    <FormBtn>Submit</FormBtn>\r\n//                </form>\r\n//                <div id=\"register\">Don't have an account? <a id=\"account\" href=\"/newUser\">Click Here</a> to create one.</div>\r\n//            </Container>\r\n//        );\r\n//    }\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          isSignedIn: false,\r\n        }\r\n        \r\n      }\r\n\r\n      componentDidMount() {\r\n    \r\n        const successCallback = this.onSuccess.bind(this);\r\n        \r\n        window.gapi.load('auth2', () => {\r\n          this.auth2 = gapi.auth2.init({\r\n            client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com',\r\n          })\r\n    \r\n          // this.auth2.attachClickHandler(document.querySelector('#loginButton'), {}, this.onLoginSuccessful.bind(this))\r\n    \r\n          this.auth2.then(() => {\r\n            console.log('on init');\r\n            this.setState({\r\n              isSignedIn: this.auth2.isSignedIn.get(),\r\n            });\r\n          });\r\n        });    \r\n    \r\n        window.gapi.load('signin2', function() {\r\n          // Method 3: render a sign in button\r\n          // using this method will show Signed In if the user is already signed in\r\n          var opts = {\r\n            width: 200,\r\n            height: 50,\r\n            client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com',\r\n            onsuccess: successCallback\r\n          }\r\n          gapi.signin2.render('loginButton', opts)\r\n        })\r\n      }\r\n    \r\n      onSuccess() {\r\n        console.log('on success')\r\n        this.setState({\r\n          isSignedIn: true,\r\n          err: null\r\n        })\r\n      }\r\n    \r\n      onLoginFailed(err) {\r\n        this.setState({\r\n          isSignedIn: false,\r\n          error: err,\r\n        })\r\n      }\r\n    \r\n      getContent() {\r\n        if (this.state.isSignedIn) {\r\n          return <p>hello user, you're signed in </p>\r\n        } else {\r\n          return (\r\n            <div>\r\n              <p>You are not signed in. Click here to sign in.</p>\r\n              <button id=\"loginButton\">Login with Google</button>\r\n            </div>\r\n          )\r\n        }\r\n        \r\n      }\r\n      \r\n      render() {\r\n        return (      \r\n          <div className=\"App\">\r\n            <header className=\"App-header\">\r\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n              <h2>Sample App.</h2>\r\n    \r\n              {this.getContent()}           \r\n            </header>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}